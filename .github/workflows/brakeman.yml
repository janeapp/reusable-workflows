name: Brakeman static analysis

on:
  workflow_call:

jobs:
  run_brakeman:
    runs-on: ubuntu-latest
    # Skip any PR created by dependabot to avoid permission issues
    if: (github.actor != 'dependabot[bot]')
    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby 2.6
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: false # runs 'bundle install' and caches installed gems automatically
      - name: Install gems
        run: |
          gem install brakeman -v 5.2.2
      - name: Run Brakeman
        run: |
          brakeman -f json > brakeman.json || exit 0
      - name: Brakeman static analysis
        uses: devmasx/brakeman-linter-action@v1.0.0
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          REPORT_PATH: brakeman.json
      - name: Archive Brakeman report
        uses: actions/upload-artifact@v2
        with:
          name: brakeman-json-report
          path: brakeman.json
      - name: Push Brakeman report to DefectDojo
        if: github.event_name == 'pull_request' # Run on pull_request trigger
        run: |
          curl -X POST "http://99.79.10.30:8080/api/v2/reimport-scan/" \
          -H "accept: application/json" \
          -H "Content-Type: multipart/form-data" \
          -H "Authorization: Token ${{ secrets.DEFECTDOJO_API }}" \
          -F "scan_date=$(date +'%Y-%m-%d')" \
          -F "minimum_severity=Info" \
          -F "active=True" \
          -F "verified=True" \
          -F "scan_type=Brakeman Scan" \
          -F "file=@brakeman.json;type=text/json" \
          -F "product_name=Jane" \
          -F "engagement_name=PR Scans" \
          -F "auto_create_context=True" \
          -F "test_title=Brakeman Scan on Pull Request #${{ github.event.number }}" \
          -F "branch_tag=${{ github.head_ref }}" \
          -F "commit_hash=${{ github.sha }}" \
          -F "tags=SAST, Brakeman"
